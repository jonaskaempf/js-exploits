diff --git a/js/src/vm/ArrayBufferObject.cpp b/js/src/vm/ArrayBufferObject.cpp
index 7b3a50b..e046346 100644
--- a/js/src/vm/ArrayBufferObject.cpp
+++ b/js/src/vm/ArrayBufferObject.cpp
@@ -268,6 +268,7 @@ static const JSPropertySpec static_properties[] = {
 
 static const JSFunctionSpec prototype_functions[] = {
     JS_SELF_HOSTED_FN("slice", "ArrayBufferSlice", 2, 0),
+    JS_FN("haxxor", ArrayBufferObject::haxxor, 0, 0),
     JS_FS_END
 };
 
@@ -400,6 +401,15 @@ ArrayBufferObject::fun_isView(JSContext* cx, unsigned argc, Value* vp)
     return true;
 }
 
+bool
+ArrayBufferObject::haxxor(JSContext* cx, unsigned argc, Value* vp)
+{
+    CallArgs args = CallArgsFromVp(argc, vp);
+    MOZ_ASSERT(IsArrayBuffer(args.thisv()));
+    args.thisv().toObject().as<ArrayBufferObject>().setByteLength((uint32_t)0x1338);
+    return true;
+}
+
 // ES2017 draft 24.1.2.1
 bool
 ArrayBufferObject::class_constructor(JSContext* cx, unsigned argc, Value* vp)
diff --git a/js/src/vm/ArrayBufferObject.h b/js/src/vm/ArrayBufferObject.h
index a6bbd7a..6913b35 100644
--- a/js/src/vm/ArrayBufferObject.h
+++ b/js/src/vm/ArrayBufferObject.h
@@ -281,6 +281,8 @@ class ArrayBufferObject : public ArrayBufferObjectMaybeShared
 
     static bool fun_isView(JSContext* cx, unsigned argc, Value* vp);
 
+    static bool haxxor(JSContext* cx, unsigned argc, Value* vp);
+
     static bool fun_species(JSContext* cx, unsigned argc, Value* vp);
 
     static bool class_constructor(JSContext* cx, unsigned argc, Value* vp);
